{"version":3,"sources":["components/IncomeInequality/data/inc-ineq-functions.js","components/IncomeInequality/data/inc-ineq-data.js","components/IncomeInequality/IncInequality.js","components/utilities/Helpers/index.js","App.js","serviceWorker.js","index.js"],"names":["labelArr","crData","Combined","White","Black","Hispanic","series","newArr","k","arr","Object","values","keys","map","item","i","push","meta","value","labels","Set","result","reduce","r","o","n","data","IncomeInequalityChart","dataRefs","useRef","useState","activeKeys","setActiveKeys","currKey","setCurrKey","options","width","height","chartPadding","top","right","bottom","left","lineSmooth","axisX","offset","onlyInteger","axisY","labelInterpolationFnc","toString","replace","labelOffset","x","y","type","ChartistGraph","FixedScaleAxis","high","low","useEffect","current","forEach","includes","classList","add","remove","Container","className","responsiveOptions","index","substring","listener","draw","e","element","addClass","group","_node","contains","setAttribute","onDrawHandler","Row","key","data-index","onClick","filter","concat","toggle","classnames","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.02863f89.chunk.js","sourcesContent":["//import { strToNum } from '../../utilities/Helpers';\nimport { crData } from './inc-ineq-data';\n\n//Set up the data for the chart...\n\nconst series = [],\n  newArr = [];\nlet labelArr;\n\nfor (let k in crData) {\n  const arr = Object.values(crData[k]);\n\n  labelArr = Object.keys(crData[k]);\n\n  arr.map((item, i) => {\n    return newArr.push({ meta: k, value: item });\n  });\n}\nconst labels = [...new Set(labelArr)];\nconst keys = Object.keys(crData);\n\nconst result = newArr.reduce((r, o) => {\n  const k = o.meta;\n  if (r[k] || (r[k] = [])) r[k].push({ meta: k, value: o.value });\n  return r;\n}, {});\n\nfor (var n in result) {\n  series.push(result[n]);\n}\n\nconst data = { labels: labels, series: series };\n\nexport { data, keys };\n","const crData = {\n  Combined: {\n    '1991': 38500,\n    '1993': 37587,\n    '1995': 40200,\n    '1998': 41681,\n    '2000': 46506,\n    '2002': 58905,\n    '2004': 79800,\n    '2005': 93200,\n    '2009': 68900,\n    '2010': 66740,\n    '2011': 68828,\n    '2013': 80039\n  },\n  White: {\n    '1991': 47075,\n    '1993': 45740,\n    '1995': 49030,\n    '1998': 59700,\n    '2000': 67000,\n    '2002': 87056,\n    '2004': 98025,\n    '2005': 130350,\n    '2009': 112183,\n    '2010': 110729,\n    '2011': 110500,\n    '2013': 103976\n  },\n  Black: {\n    '1991': 4844,\n    '1993': 4418,\n    '1995': 7073,\n    '1998': 5490,\n    '2000': 6166,\n    '2002': 5446,\n    '2004': 8650,\n    '2005': 11013,\n    '2009': 4703,\n    '2010': 4955,\n    '2011': 6314,\n    '2013': 9211\n  },\n  Hispanic: {\n    '1991': 5557,\n    '1993': 4656,\n    '1995': 7255,\n    '1998': 5824,\n    '2000': 6766,\n    '2002': 7950,\n    '2004': 13375,\n    '2005': 17078,\n    '2009': 6250,\n    '2010': 7424,\n    '2011': 7683,\n    '2013': 12458\n  },\n  'Asian/Pacific': {\n    '1991': '#N/A',\n    '1993': '#N/A',\n    '1995': '#N/A',\n    '1998': '#N/A',\n    '2000': '#N/A',\n    '2002': 59292,\n    '2004': 107690,\n    '2005': 152714,\n    '2009': 69049,\n    '2010': 69590,\n    '2011': 89339,\n    '2013': 112250\n  }\n};\n\nexport { crData };\n","import React, { useEffect, useRef, useState } from 'react';\nimport ChartistGraph from 'react-chartist';\nimport classnames from 'classnames';\nimport { data, keys } from '../IncomeInequality/data/inc-ineq-functions';\nimport { addCommas } from '../utilities/Helpers';\nimport { Container, Row } from 'reactstrap';\nimport '../../../node_modules/chartist/dist/chartist.css';\nimport './index.scss';\n\nconst IncomeInequalityChart = () => {\n  const dataRefs = useRef([]);\n  const [activeKeys, setActiveKeys] = useState([]);\n  const [currKey, setCurrKey] = useState(null);\n\n  const options = {\n    width: '100%',\n    height: 320,\n    chartPadding: { top: 20, right: 0, bottom: 0, left: 0 },\n    lineSmooth: false,\n    axisX: { offset: 60, onlyInteger: false },\n    axisY: {\n      offset: 80,\n      labelInterpolationFnc: function (value) {\n        return addCommas(value);\n      },\n      labelOffset: { x: -10, y: 8 },\n      type: ChartistGraph.FixedScaleAxis,\n      high: 150000,\n      low: 0\n    }\n  };\n  const responsiveOptions = [\n    [\n      'screen and (max-width: 640px)',\n      {\n        axisX: {\n          labelOffset: { x: 0, y: 6 },\n          labelInterpolationFnc: function (value, index) {\n            return \"'\" + value.substring(2);\n          }\n        },\n        axisY: {\n          offset: 45,\n          labelOffset: { x: 0 },\n          labelInterpolationFnc: function (value) {\n            return value / 1000 + 'K';\n          }\n        }\n      }\n    ]\n  ];\n  const type = 'Line';\n\n  const toggle = key => {\n    setCurrKey(key);\n    if (!activeKeys.includes(key)) {\n      setActiveKeys(activeKeys.concat(key));\n    } else {\n      setActiveKeys(activeKeys.filter(item => item !== key));\n      setCurrKey(null);\n    }\n  };\n\n  const onDrawHandler = data => {\n    if (data.type === 'grid' && data.index === 0) {\n      data.element.addClass('axis');\n    }\n    if (\n      data.type === 'line' &&\n      data.group._node.classList.contains('ct-series')\n    ) {\n      data.group._node.setAttribute(\n        'ref',\n        (dataRefs.current[data.index] = data.group._node)\n      );\n    }\n  };\n\n  useEffect(() => {\n    if (dataRefs.current) {\n      dataRefs.current.forEach((item, i) => {\n        if (activeKeys.includes(i)) {\n          item.classList.add('visible');\n        } else {\n          item.classList.remove('visible');\n          item.classList.remove('animate');\n        }\n      });\n    }\n  }, [activeKeys]);\n  useEffect(() => {\n    if (dataRefs.current) {\n      dataRefs.current.forEach((item, i) => {\n        if (currKey === i) {\n          item.classList.add('animate');\n        } else {\n          item.classList.remove('animate');\n        }\n      });\n    }\n  }, [currKey]);\n\n  return (\n    <div>\n      <section>\n        <Container>\n          <h2 className={`text-center py-2`}>\n            {' '}\n            Income Inequality in the U.S.A 1991 - 2013\n          </h2>\n          <ChartistGraph\n            data={data}\n            options={options}\n            responsiveOptions={responsiveOptions}\n            type={type}\n            listener={{ draw: e => onDrawHandler(e) }}\n            activeKeys={activeKeys}\n          />\n        </Container>\n        <Container className=\"legend-wrap\">\n          <Row className=\"justify-content-between\">\n            {keys.map((key, i) => {\n              return (\n                <div\n                  key={`k${i}`}\n                  data-index={i}\n                  onClick={() => {\n                    toggle(i);\n                  }}\n                  className={classnames(\n                    `key key-${i}`,\n                    activeKeys.includes(i) ? 'active' : ''\n                  )}\n                >\n                  <svg className=\"checkbox\" width=\"20\" height=\"20\">\n                    <rect width=\"20\" height=\"20\" />\n                  </svg>\n                  {key}\n                </div>\n              );\n            })}\n          </Row>\n        </Container>\n      </section>\n    </div>\n  );\n};\n\nexport default IncomeInequalityChart;\n","export function strToNum(str) {\n  return parseInt(str.toString().replace(/,/g, ''));\n}\n\nexport function addCommas(x) {\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n}\n","import React from 'react';\n//import logo from './logo.svg';\nimport './App.scss';\nimport IncomeInequalityChart2 from './components/IncomeInequality/IncInequality';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1> Cengage Data Projects 2018 - 2019</h1>\n      </header>\n      <IncomeInequalityChart2 />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}