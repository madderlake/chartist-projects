{"version":3,"sources":["components/Federalism/data/federalism-data.js","components/utilities/Helpers/index.js","components/Federalism/data/federalism-data-proc.js","components/IncomeInequality/data/inc-ineq-data-proc.js","hooks/useUpdateDataStyles.js","components/Federalism/Federalism.js","components/IncomeInequality/data/inc-ineq-data.js","components/IncomeInequality/IncInequality.js","App.js","serviceWorker.js","index.js"],"names":["fedData","Transportation","Health","addCommas","x","toString","replace","labelArr","series","newArr","k","arr","Object","values","keys","map","item","i","push","meta","value","str","parseInt","labels","Set","result","reduce","r","o","n","data","useUpdateDataStyles","refs","activeKeys","currKey","visibleClass","animateClass","useEffect","current","includes","classList","add","remove","FederalismChart","props","dataRefs","useRef","useState","state","setState","options","width","height","chartPadding","top","right","bottom","left","seriesBarDistance","axisX","offset","labelOffset","y","labelInterpolationFnc","axisY","type","ChartistGraph","FixedScaleAxis","high","low","ticks","plugins","ChartistTooltip","currency","class","transformTooltipTextFnc","toFixed","className","Container","listener","draw","e","index","element","addClass","Chartist","getMultiValue","arrow","Svg","d","x1","y2","x2","join","style","group","append","customLabels","elem","text","console","log","_node","contains","setAttribute","seriesIndex","onDrawHandler","Row","key","Col","sm","md","lg","data-index","onClick","filter","toggle","classnames","toLowerCase","href","crData","Combined","White","Black","Hispanic","IncomeInequalityChart","lineSmooth","onlyInteger","responsiveOptions","substring","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.64c16228.chunk.js","sourcesContent":["const fedData = {\n  /*\n  \"Resrcs & Environment\": {\n    \"2000\": \"4,595\",\n    \"2005\": \"5,858\",\n    \"2010\": \"9,132\",\n    \"2015\": \"7,044\",\n    \"2016\": \"7,154\",\n    \"2017\": \"7,227\",\n    \"2018\": \"5,846\",\n//     \"2020\": \"4,959\"\n  },\n*/\n  /*\n  \"Agriculture\": {\n    \"2000\": 724,\n    \"2005\": 933,\n    \"2010\": 843,\n    \"2015\": 707,\n    \"2016\": 806,\n    \"2017\": 849,\n    \"2018\": 996,\n  \"2020\": \"1,018\"\n  },\n*/\n  Transportation: {\n    '2000': '32,222',\n    '2005': '43,370',\n    '2010': '60,981',\n    '2015': '60,831',\n    '2016': '63,861',\n    '2017': '63,914',\n    '2018': '61,504'\n    //     \"2020\": \"61,435\"\n  },\n  'Community Dev': {\n    '2000': '8,665',\n    '2005': '20,167',\n    '2010': '18,908',\n    '2015': '14,357',\n    '2016': '15,298',\n    '2017': '14,079',\n    '2018': '16,531'\n    //     \"2020\": \"29,880\"\n  },\n  /*\n  \"Educ & Training\": {\n    \"2000\": \"36,672\",\n    \"2005\": \"57,247\",\n    \"2010\": \"97,586\",\n    \"2015\": \"60,527\",\n    \"2016\": \"60,867\",\n    \"2017\": \"64,175\",\n    \"2018\": \"59,510\",\n//     \"2020\": \"54,058\"\n  },\n*/\n  Health: {\n    '2000': '124,843',\n    '2005': '197,848',\n    '2010': '290,168',\n    '2015': '368,026',\n    '2016': '396,666',\n    '2017': '411,445',\n    '2018': '432,462'\n    //     \"2020\": \"465,687\"\n  },\n  'Income Security': {\n    '2000': '68,653',\n    '2005': '90,885',\n    '2010': '115,156',\n    '2015': '101,082',\n    '2016': '104,769',\n    '2017': '110,262',\n    '2018': '107,065'\n    //     \"2020\": \"107,199\"\n  }\n  /*  ,\n\n  \"Veterans\": {\n    \"2000\": 434,\n    \"2005\": 552,\n    \"2010\": 836,\n    \"2015\": \"1,821\",\n    \"2016\": \"1,829\",\n    \"2017\": \"2,072\",\n    \"2018\": \"2,071\",\n//     \"2020\": \"1,973\"\n  },\n*/\n  /*\n  \"Justice Admin\": {\n    \"2000\": \"5,263\",\n    \"2005\": \"4,784\",\n    \"2010\": \"5,086\",\n    \"2015\": \"3,664\",\n    \"2016\": \"3,536\",\n    \"2017\": \"6,323\",\n    \"2018\": \"5,647\",\n//     \"2020\": \"3,974\"\n  },\n*/\n  /*\n  \"Gen'l Govt\": {\n    \"2000\": \"2,144\",\n    \"2005\": \"4,370\",\n    \"2010\": \"5,218\",\n    \"2015\": \"3,828\",\n    \"2016\": \"3,086\",\n    \"2017\": \"2,762\",\n    \"2018\": \"3,390\",\n//     \"2020\": \"3,403\"\n  }\n*/\n};\n\nexport default fedData;\n","export function strToNum(str) {\n  return parseInt(str.toString().replace(/,/g, ''));\n}\n\nexport function addCommas(x) {\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n}\n","import fedData from './federalism-data';\nimport { strToNum } from '../../utilities/Helpers';\nconst series = [],\n  newArr = [];\nlet labelArr;\n\nfor (let k in fedData) {\n  const arr = Object.values(fedData[k]);\n\n  labelArr = Object.keys(fedData[k]);\n\n  arr.map((item, i) => {\n    return newArr.push({ meta: k, value: strToNum(item) });\n  });\n}\nconst labels = [...new Set(labelArr)];\nconst keys = Object.keys(fedData);\n\nconst result = newArr.reduce((r, o) => {\n  const k = o.meta;\n  if (r[k] || (r[k] = [])) r[k].push({ meta: k, value: o.value });\n  return r;\n}, {});\n\nfor (var n in result) {\n  series.push(result[n]);\n}\n\nconst data = { labels: labels, series: series };\n\nexport { data, keys };\n","import { crData } from './inc-ineq-data';\n\n//Set up the data for the chart...\n\nconst series = [],\n  newArr = [];\nlet labelArr;\n\nfor (let k in crData) {\n  const arr = Object.values(crData[k]);\n\n  labelArr = Object.keys(crData[k]);\n\n  arr.map((item, i) => {\n    return newArr.push({ meta: k, value: item });\n  });\n}\nconst labels = [...new Set(labelArr)];\nconst keys = Object.keys(crData);\n\nconst result = newArr.reduce((r, o) => {\n  const k = o.meta;\n  if (r[k] || (r[k] = [])) r[k].push({ meta: k, value: o.value });\n  return r;\n}, {});\n\nfor (var n in result) {\n  series.push(result[n]);\n}\n\nconst data = { labels: labels, series: series };\n\nexport { data, keys };\n","import { useEffect } from 'react';\nexport const useUpdateDataStyles = (\n  refs,\n  activeKeys,\n  currKey,\n  visibleClass,\n  animateClass\n) => {\n  useEffect(() => {\n    if (refs.current) {\n      const els = refs.current;\n      els.map((item, i) => {\n        return [\n          activeKeys.includes(i)\n            ? item.classList.add(visibleClass)\n            : item.classList.remove(visibleClass),\n          item.classList.remove(animateClass),\n\n          currKey === i\n            ? item.classList.add(animateClass)\n            : item.classList.remove(animateClass)\n        ];\n      });\n    }\n  });\n};\n","import React, { useRef, useState } from 'react';\nimport Chartist from 'chartist';\nimport ChartistGraph from 'react-chartist';\nimport classnames from 'classnames';\nimport { data, keys } from './data/federalism-data-proc';\nimport { addCommas } from '../utilities/Helpers';\nimport { Container, Row, Col } from 'reactstrap';\nimport ChartistTooltip from 'chartist-plugin-tooltips-updated';\nimport './index.css';\nimport { useUpdateDataStyles } from '../../hooks/useUpdateDataStyles';\n\nconst FederalismChart = props => {\n  const dataRefs = useRef([]);\n\n  const [state, setState] = useState({\n    activeKeys: [],\n    currKey: null\n  });\n\n  const options = {\n    width: '100%',\n    height: 380,\n    chartPadding: { top: 40, right: 0, bottom: 0, left: 0 },\n    seriesBarDistance: 10,\n    axisX: {\n      offset: 60,\n      labelOffset: { x: 0, y: 5 },\n      labelInterpolationFnc: function (value) {\n        if (value > 2016) {\n          return value + '\\n (estimate)';\n        } else {\n          return value;\n        }\n      }\n    },\n    axisY: {\n      offset: 80,\n      labelInterpolationFnc: function (value) {\n        //return addCommas(value);\n        return '$' + value / 1000 + ' B';\n      },\n      labelOffset: { x: 0, y: 8 },\n      type: ChartistGraph.FixedScaleAxis,\n      high: 150000,\n      low: 0,\n      ticks: [0, 25000, 50000, 75000, 100000, 125000]\n    },\n    plugins: [\n      ChartistTooltip({\n        currency: '$',\n        class: 'ct-tooltip',\n        transformTooltipTextFnc: function (x) {\n          //return addCommas(x) + 'M';\n          return (x / 1000).toFixed(1) + 'B';\n        }\n      })\n    ]\n  };\n\n  const toggle = key => {\n    if (state.activeKeys) {\n      if (!state.activeKeys.includes(key)) {\n        setState({\n          activeKeys: [...state.activeKeys, key],\n          currKey: key\n        });\n      } else {\n        setState({\n          activeKeys: [...state.activeKeys].filter(item => item !== key),\n          currKey: null\n        });\n      }\n    }\n  };\n\n  /* Chart Specific Handler */\n  const onDrawHandler = data => {\n    if (data.type === 'grid' && data.index === 0) {\n      data.element.addClass('axis');\n    }\n\n    if (data.type === 'bar') {\n      if (Chartist.getMultiValue(data.value) > 125000) {\n        const arrow = Chartist.Svg(\n          'path',\n          {\n            d: [\n              'M',\n              data.x1,\n              data.y2 - 13,\n              'L',\n              data.x2 - 13,\n              data.y2 + 1,\n              'L',\n              data.x2 + 13,\n              data.y2 + 1,\n              'z'\n            ].join(' '),\n            style: 'fill-opacity: 1 ; fill: #f4c63d'\n          },\n          'ct-arrow'\n        );\n        data.group.append(arrow);\n        const customLabels = [];\n        customLabels[data.index] = addCommas(\n          Chartist.getMultiValue(data.value)\n        );\n        if (customLabels[data.index]) {\n          const x = data.type === 'bar' ? data.x2 : data.x;\n          const y = data.type === 'bar' ? data.y2 : data.y;\n          data.group\n            .elem('text', { x: x - 24, y: y - 25 }, 'ct-label-top')\n            .text(customLabels[data.index]);\n        }\n        console.log(customLabels[data.index]);\n      }\n    }\n\n    if (\n      data.type === 'bar' &&\n      data.group._node.classList.contains('ct-series')\n    ) {\n      data.group._node.setAttribute(\n        'ref',\n        (dataRefs.current[data.seriesIndex] = data.group._node)\n      );\n    }\n  };\n  const activeKeys = state.activeKeys;\n  const currKey = state.currKey;\n\n  useUpdateDataStyles(dataRefs, activeKeys, currKey, 'visible', 'animate');\n\n  return (\n    <div className={`federalism`}>\n      <section>\n        <Container>\n          <h2 className={`text-center py-2`}> Federal Support for States</h2>\n          <ChartistGraph\n            data={data}\n            options={options}\n            type={props.type}\n            listener={{ draw: e => onDrawHandler(e) }}\n          />\n        </Container>\n        <Container className=\"legend-wrap\">\n          <h5 className={`mb-5`}>\n            Select Categories Below to Compare How Much Support the Federal\n            Gov't Provides to the States\n          </h5>\n          <Row className=\"justify-content-between\">\n            {keys.map((key, i) => {\n              return (\n                <Col className={`key-wrap`} key={key} sm={12} md={6} lg={3}>\n                  <button\n                    key={`k${i}`}\n                    data-index={i}\n                    onClick={() => {\n                      toggle(i);\n                    }}\n                    className={classnames(`key key-${i}`)}\n                  >\n                    <i\n                      className={classnames(\n                        `${key.toLowerCase().replace(/\\s/g, '-')}`,\n                        state.activeKeys.includes(i) ? 'on' : ''\n                      )}\n                      key={`${i}`}\n                    ></i>\n                    {key}\n                  </button>\n                </Col>\n              );\n            })}\n          </Row>\n          <small className={`source`}>\n            <small className={`text-center`}>\n              Source:{' '}\n              <a href=\"https://www.whitehouse.gov/omb/historical-tables/\">\n                https://www.whitehouse.gov/omb/historical-tables/\n              </a>\n            </small>\n          </small>\n        </Container>\n      </section>\n    </div>\n  );\n};\n\nexport default FederalismChart;\n","const crData = {\n  Combined: {\n    '1991': 38500,\n    '1993': 37587,\n    '1995': 40200,\n    '1998': 41681,\n    '2000': 46506,\n    '2002': 58905,\n    '2004': 79800,\n    '2005': 93200,\n    '2009': 68900,\n    '2010': 66740,\n    '2011': 68828,\n    '2013': 80039\n  },\n  White: {\n    '1991': 47075,\n    '1993': 45740,\n    '1995': 49030,\n    '1998': 59700,\n    '2000': 67000,\n    '2002': 87056,\n    '2004': 98025,\n    '2005': 130350,\n    '2009': 112183,\n    '2010': 110729,\n    '2011': 110500,\n    '2013': 103976\n  },\n  Black: {\n    '1991': 4844,\n    '1993': 4418,\n    '1995': 7073,\n    '1998': 5490,\n    '2000': 6166,\n    '2002': 5446,\n    '2004': 8650,\n    '2005': 11013,\n    '2009': 4703,\n    '2010': 4955,\n    '2011': 6314,\n    '2013': 9211\n  },\n  Hispanic: {\n    '1991': 5557,\n    '1993': 4656,\n    '1995': 7255,\n    '1998': 5824,\n    '2000': 6766,\n    '2002': 7950,\n    '2004': 13375,\n    '2005': 17078,\n    '2009': 6250,\n    '2010': 7424,\n    '2011': 7683,\n    '2013': 12458\n  },\n  'Asian/Pacific': {\n    '1991': '#N/A',\n    '1993': '#N/A',\n    '1995': '#N/A',\n    '1998': '#N/A',\n    '2000': '#N/A',\n    '2002': 59292,\n    '2004': 107690,\n    '2005': 152714,\n    '2009': 69049,\n    '2010': 69590,\n    '2011': 89339,\n    '2013': 112250\n  }\n};\n\nexport { crData };\n","import React, { useEffect, useRef, useState } from 'react';\nimport ChartistGraph from 'react-chartist';\nimport classnames from 'classnames';\nimport { data, keys } from '../IncomeInequality/data/inc-ineq-data-proc';\nimport { addCommas } from '../utilities/Helpers';\nimport { Container, Row } from 'reactstrap';\nimport { useUpdateDataStyles } from '../../hooks/useUpdateDataStyles';\nimport './index.css';\n\nconst IncomeInequalityChart = props => {\n  const dataRefs = useRef([]);\n  const [state, setState] = useState({\n    activeKeys: [],\n    currKey: null\n  });\n\n  const toggle = key => {\n    if (state.activeKeys) {\n      if (!state.activeKeys.includes(key)) {\n        setState({\n          activeKeys: [...state.activeKeys, key],\n          currKey: key\n        });\n      } else {\n        setState({\n          activeKeys: [...state.activeKeys].filter(item => item !== key),\n          currKey: null\n        });\n      }\n    }\n  };\n  const options = {\n    width: '100%',\n    height: 320,\n    chartPadding: { top: 20, right: 0, bottom: 0, left: 0 },\n    lineSmooth: false,\n    axisX: { offset: 60, onlyInteger: false },\n    axisY: {\n      offset: 80,\n      labelInterpolationFnc: function (value) {\n        return addCommas(value);\n      },\n      labelOffset: { x: -10, y: 8 },\n      type: ChartistGraph.FixedScaleAxis,\n      high: 150000,\n      low: 0\n    }\n  };\n  const responsiveOptions = [\n    [\n      'screen and (max-width: 640px)',\n      {\n        axisX: {\n          labelOffset: { x: 0, y: 6 },\n          labelInterpolationFnc: function (value, index) {\n            return \"'\" + value.substring(2);\n          }\n        },\n        axisY: {\n          offset: 45,\n          labelOffset: { x: 0 },\n          labelInterpolationFnc: function (value) {\n            return value / 1000 + 'K';\n          }\n        }\n      }\n    ]\n  ];\n\n  const onDrawHandler = data => {\n    if (data.type === 'grid' && data.index === 0) {\n      data.element.addClass('axis');\n    }\n    if (\n      data.type === 'line' &&\n      data.group._node.classList.contains('ct-series')\n    ) {\n      data.group._node.setAttribute(\n        'ref',\n        (dataRefs.current[data.index] = data.group._node)\n      );\n    }\n  };\n  const activeKeys = state.activeKeys;\n  const currKey = state.currKey;\n\n  useUpdateDataStyles(dataRefs, activeKeys, currKey, 'visible', 'animate');\n\n  return (\n    <div className={`income-inequality`}>\n      <section>\n        <Container>\n          <h2 className={`text-center py-2`}>\n            {' '}\n            Income Inequality in the U.S.A 1991 - 2013\n          </h2>\n          <ChartistGraph\n            data={data}\n            options={options}\n            responsiveOptions={responsiveOptions}\n            type={props.type}\n            listener={{ draw: e => onDrawHandler(e) }}\n            // activeKeys={state.activeKeys}\n          />\n        </Container>\n        <Container className=\"legend-wrap\">\n          <Row className=\"justify-content-between\">\n            {keys.map((key, i) => {\n              return (\n                <div\n                  key={`k${i}`}\n                  data-index={i}\n                  onClick={() => {\n                    toggle(i);\n                  }}\n                  className={classnames(\n                    `key key-${i}`,\n                    state.activeKeys.includes(i) ? 'active' : ''\n                  )}\n                >\n                  <svg className=\"checkbox\" width=\"20\" height=\"20\">\n                    <rect width=\"20\" height=\"20\" />\n                  </svg>\n                  {key}\n                </div>\n              );\n            })}\n          </Row>\n        </Container>\n      </section>\n    </div>\n  );\n};\nexport default IncomeInequalityChart;\n","import React from 'react';\nimport './styles/styles.css';\nimport FederalismChart from './components/Federalism/Federalism';\nimport IncomeInequalityChart from './components/IncomeInequality/IncInequality';\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1> Cengage Chart Projects 2018 - 2019</h1>\n      </header>\n      <IncomeInequalityChart type={`Line`} />\n      <FederalismChart type={`Bar`} />\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/styles.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}